Install
-------

curl https://sh.rustup.rs -sSf | sh

source $HOME/.cargo/env

rustc --version

Hello World
-----------

mkdir projects

cd projects

mkdir hello_world

cd hello_world

**make a hello world .rs file**
**indent with four spaces, not a tab.**
**println! is a macro, not a function; all macros end with !**

Compile the file to get a binary executable
rustc main.rs

Execute the binary
./main

**The above executable can be run on any *NIX platform without having rust installed**

Hello Cargo
-----------

cd ../projects

cargo new hello_cargo

cd hello_cargo

Cargo.toml contains a list of configurations

main.rs is inside the src directory

Create an executable file in target/debug/hello_cargo
cargo build

Run executable file:
./target/debug/hello_cargo

Compile and run (in one command):
**Any change in the source file would make cargo rebuild it**
cargo run

Ensure compilation, but don't produce executable:
**Much faster than cargo build; used to continually check work in (large) projects**
cargo check

Build for production:
**This will compile the project with optimizations, and create an executable in target/release instead of target/debug. The code will run faster, but will increase the time program compile time.**
cargo build --release

Benchmark production release:
./target/release/hello_cargo


